// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRJ_DSC.Models;

#nullable disable

namespace PRJ_DSC.Migrations
{
    [DbContext(typeof(DSCDBContext))]
    partial class DSCDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRJ_DSC.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA5865917363F");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__A9D105348F3BCB55")
                        .IsUnique();

                    b.ToTable("Account", (string)null);

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Email = "admin@gmail.com",
                            Password = "admin123",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PRJ_DSC.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("Expense")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("NumberOfTeams")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ActivityId")
                        .HasName("PK__Activiti__45F4A7F1F0660450");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClubID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    b.Property<string>("Rules")
                        .HasColumnType("text");

                    b.Property<int?>("SportId")
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("WeeklySchedule")
                        .HasColumnType("text");

                    b.HasKey("ClubId")
                        .HasName("PK__Clubs__D35058C70DD3684E");

                    b.HasIndex("LevelId");

                    b.HasIndex("SportId");

                    b.HasIndex("UserId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<string>("Comment1")
                        .HasColumnType("text")
                        .HasColumnName("Comment");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Star")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int")
                        .HasColumnName("TournamentID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentId")
                        .HasName("PK__Comment__C3B4DFAA97EEE26D");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TournamentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("PRJ_DSC.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LevelId")
                        .HasName("PK__Level__09F03C06677572E8");

                    b.ToTable("Level", (string)null);

                    b.HasData(
                        new
                        {
                            LevelId = 1,
                            LevelName = "Beginner"
                        },
                        new
                        {
                            LevelId = 2,
                            LevelName = "Intermediate"
                        },
                        new
                        {
                            LevelId = 3,
                            LevelName = "Professional"
                        });
                });

            modelBuilder.Entity("PRJ_DSC.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int")
                        .HasColumnName("TournamentID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32E879D70F");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("PRJ_DSC.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A4DBB3D5B");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Organizer"
                        });
                });

            modelBuilder.Entity("PRJ_DSC.Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"));

                    b.Property<string>("Achievement")
                        .HasColumnType("text");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SportId")
                        .HasName("PK__Sport__7A41AF1C153DF369");

                    b.HasIndex("LevelId");

                    b.ToTable("Sport", (string)null);
                });

            modelBuilder.Entity("PRJ_DSC.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TournamentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("NumberOfTeams")
                        .HasColumnType("int");

                    b.Property<string>("Rules")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TournamentId")
                        .HasName("PK__Tourname__AC6313334A00B968");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("PRJ_DSC.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("SportId")
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACD1995F13");

                    b.HasIndex("AccountId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SportId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Admin St",
                            Age = 30,
                            Fullname = "Admin",
                            Gender = "Male",
                            Height = 175m,
                            Phone = "1234567890",
                            RoleId = 1,
                            Status = "Active",
                            Weight = 70m
                        });
                });

            modelBuilder.Entity("PRJ_DSC.Models.Activity", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Level", "Level")
                        .WithMany("Activities")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Activitie__Level__46E78A0C");

                    b.HasOne("PRJ_DSC.Models.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Activitie__UserI__45F365D3");

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Club", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Level", "Level")
                        .WithMany("Clubs")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Clubs__LevelID__4316F928");

                    b.HasOne("PRJ_DSC.Models.Sport", "Sport")
                        .WithMany("Clubs")
                        .HasForeignKey("SportId")
                        .HasConstraintName("FK__Clubs__SportID__412EB0B6");

                    b.HasOne("PRJ_DSC.Models.User", "User")
                        .WithMany("Clubs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Clubs__UserID__4222D4EF");

                    b.Navigation("Level");

                    b.Navigation("Sport");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Comment", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Activity", "Activity")
                        .WithMany("Comments")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK__Comment__Activit__4E88ABD4");

                    b.HasOne("PRJ_DSC.Models.Tournament", "Tournament")
                        .WithMany("Comments")
                        .HasForeignKey("TournamentId")
                        .HasConstraintName("FK__Comment__Tournam__4F7CD00D");

                    b.HasOne("PRJ_DSC.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comment__UserID__4D94879B");

                    b.Navigation("Activity");

                    b.Navigation("Tournament");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Notification", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Activity", "Activity")
                        .WithMany("Notifications")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK__Notificat__Activ__52593CB8");

                    b.HasOne("PRJ_DSC.Models.Tournament", "Tournament")
                        .WithMany("Notifications")
                        .HasForeignKey("TournamentId")
                        .HasConstraintName("FK__Notificat__Tourn__534D60F1");

                    b.Navigation("Activity");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Sport", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Level", "Level")
                        .WithMany("Sports")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Sport__LevelID__286302EC");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Tournament", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Level", "Level")
                        .WithMany("Tournaments")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Tournamen__Level__4AB81AF0");

                    b.HasOne("PRJ_DSC.Models.User", "User")
                        .WithMany("Tournaments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Tournamen__UserI__49C3F6B7");

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRJ_DSC.Models.User", b =>
                {
                    b.HasOne("PRJ_DSC.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__User__AccountID__3E52440B");

                    b.HasOne("PRJ_DSC.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleID__3C69FB99");

                    b.HasOne("PRJ_DSC.Models.Sport", "Sport")
                        .WithMany("Users")
                        .HasForeignKey("SportId")
                        .HasConstraintName("FK__User__SportID__3D5E1FD2");

                    b.Navigation("Account");

                    b.Navigation("Role");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Account", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Activity", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Level", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Clubs");

                    b.Navigation("Sports");

                    b.Navigation("Tournaments");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Sport", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PRJ_DSC.Models.Tournament", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("PRJ_DSC.Models.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Clubs");

                    b.Navigation("Comments");

                    b.Navigation("Tournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
